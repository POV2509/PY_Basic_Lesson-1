
# ДЗ 8.1. Додати 1 до числа
# написати функцію add_one, яка приймає список із цифр, які у свою чергу є одним числом. До нього необхідно додати 1.
# Тобто. Вам необхідно з набору цифр, що входять до списку, отримати число, скласти його з 1 і отриману суму, знову розбити на список із цифр.
# В результаті функція повертає список із цифр, що становлять значення суми.

# для формування списку будемо генерувати випадковий список чисел
# завантажуємо бібліотеку random для генерування випадкових чисел
import random
# створюємо функцію генерації списку з кількістю елементів 4 , у діапазоні від 5 до 9
def generate_digits():
   return [random.randint(5,9) for i in range(4)]
# друкуємо отриманий список
random_digits = generate_digits()
print(f"Випадковий список цифр: {random_digits}")
# створюємо функцію add_one
def add_one(random_digits):
# перетворюємо список цифр на рядок (функція map кожну цифру перетворює на рядок),
# потім на ціле число (join з`єднує рядки, int перетворює результуючий рядок на ціле число)
    number = int(''.join(map(str,random_digits)))
# додаємо 1
    number += 1
# перетворюємо число на список цифр: number у строку, кожна цифра цієї строки стає цілим числом
    return [int(digit) for digit in str(number)]

# додаємо 1 до числа, створеного рандомно з 4х цифр шляхом виклику функції add_one
result = add_one(random_digits)
# Друкуємо результат
print(f"Result: {result}")


#   ДЗ 8.2. Паліандром
# Написати функцію is_palindrome, яка перевірятиме, чи є рядок паліндромом.
# Паліндромом - це такий рядок, який читається однаково зліва направо і зправа наліво
# без урахування знаків пунктуації та розмірності букв.
# Функція приймає на вхід рядок, та повертає булеве значення True або False

# загружаємо бібліотеку, шоб використовувати string.punctuation
import string

def is_palindrome(line):
# Видаляємо знаки пунктуації та пробіли, перетворюємо на нижній регістр
    cleaned_line = ''.join(char.lower() for char in line if char not in string.punctuation and char != ' ')
# Перевіряємо, чи дорівнює рядок своєму зворотному варіанту за допомогою зрізу
    return cleaned_line == cleaned_line[::-1]
# Перевірка
print(is_palindrome("Hello, Word!"))
print(is_palindrome("Я несу гусеня!"))
print(is_palindrome("Was it a car or a cat I saw?"))


# ДЗ 8.3. Унікальне число

# написати функцію find_unique_value, яка приймає список із чисел,
# знаходить серед них  унікальне число  та повертати його.
# Унікальне число - це число, яке зустрічається в списку один раз.
# Випадок, коли в одному списку буде кілька унікальних чисел, перевіряти не потрібно.

# скористуємось генератором чисел
# завантажуємо бібліотеку random для генерування випадкових чисел
import random
# створюємо функцію генерації списку з кількістю елементів 10 , у діапазоні від 0 до 10
def generate_digits():
   return [random.randint(0,10) for i in range(10)]
# друкуємо отриманий список
random_digits = generate_digits()
# друкуємо рандомний список (для наочності)
print(f"Випадковий список цифр: {random_digits}")

def find_unique_value(random_digits):
    return [digit for digit in random_digits if random_digits.count(digit) == 1]
# друкуємо унікальні числа\унікальне число
print(f"Унікальні(е) числа(о): {find_unique_value(random_digits)}")